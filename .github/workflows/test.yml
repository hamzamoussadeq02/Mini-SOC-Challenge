name: Mini-SOC

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  
  build-images:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker images
        working-directory: ./docker
        run: |
          docker compose build


  trivy-scan:
    runs-on: self-hosted
    needs: build-images
    strategy:
      matrix:
        image: 
          - wazuh/wazuh-manager:4.12.0
          - wazuh/wazuh-indexer:4.12.0
          - wazuh/wazuh-dashboard:4.12.0
          - nginx:latest
    steps:
      - name: Run Trivy scan
        working-directory: ./testing/trivy-reports
        run: |
          IMAGE=${{ matrix.image }}
          REPORT_FILE="$(echo $IMAGE | tr / _ | tr : _).txt"
          echo "üîç Scanning $IMAGE"
          trivy image --exit-code 0 --severity HIGH,CRITICAL -o $REPORT_FILE $IMAGE
          echo "artifactName=$REPORT_FILE" >> $GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifactName }}
          path: ./testing/trivy-reports/${{ env.artifactName }}
       

 
  deploy-and-test:
    runs-on: self-hosted
    needs: trivy-scan
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch secrets from Vault
        uses: hashicorp/vault-action@v2.4.0
        with:
          url: http://192.168.1.27:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secret/github-ci indexer_admin_password | INDEXER_ADMIN_PASSWORD ;
            secret/github-ci wazuh_api_password      | WAZUH_API_PASSWORD ;
            secret/github-ci kibana_user_password    | KIBANA_USER_PASSWORD ;

      - name: Render wazuh.yml from template
        run: |
          envsubst < docker/config/wazuh_dashboard/wazuh.yml.template > docker/config/wazuh_dashboard/wazuh.yml

      - name: Generate indexer certificates
        working-directory: ./docker
        run: |
          docker compose -f generate-indexer-certs.yml run --rm generator

      - name: Deploy Docker environment
        working-directory: ./docker
        run: |
          docker compose up -d

      - name: Wait for Wazuh Dashboard
        run: |
          echo "‚è≥ Waiting for Wazuh Dashboard at https://localhost/"
          retries=30
          for i in $(seq 1 $retries); do
            body="$(curl -skL https://localhost/ || true)"

            if echo "$body" | grep -q "502 Bad Gateway"; then
              echo "‚ùå Got 502 Bad Gateway ($i/$retries)"
              sleep 5
              continue
            fi

            if echo "$body" | grep -q "Wazuh dashboard server is not ready yet"; then
              echo "‚è≥ Dashboard not ready yet... ($i/$retries)"
              sleep 5
              continue
            fi

            if [ -n "$body" ]; then
              echo "‚úÖ Dashboard is ready"
              exit 0
            fi

            echo "Still waiting... ($i/$retries)"
            sleep 5
          done

          echo "‚ùå Timeout waiting for dashboard"
          exit 1

      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          path: ./testing/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('./testing/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install dependencies && run selenium tests
        working-directory: ./testing
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip3 install -r requirements.txt
          python3 dashboard_selenium_test.py

      - name: Run Wazuh API healthcheck
        working-directory: ./testing
        run: |
          chmod +x api_health_check.sh
          ./api_health_check.sh
